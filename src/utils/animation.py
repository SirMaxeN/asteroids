import pygame
import random
from .shape import Shape
from .rectparticle import RectParticle
from .constants import PLANET_SPEED, SCREEN_HEIGHT, SCREEN_WIDTH


class Animation(Shape):
    current_type = None
    current_rotation = None
    current_position = None

    def __init__(self, x, y, color):
        super().__init__(x, y, 0)
        self.color = color
        if Animation.current_type == None:
            Animation.current_type = random.randint(0, 1)
        if Animation.current_rotation == None:
            Animation.current_rotation = random.randint(0, 6) * 10
        if Animation.current_position == None:
            Animation.current_position = self.position
        self.cooldown = 0
        self.velocity = pygame.Vector2(-0.3, -1)

        for i in range(0, 40):
            p = RectParticle(SCREEN_WIDTH*random.random(),
                             SCREEN_HEIGHT*random.random(), 3, 6, (50, 50, 50))
            p.velocity = self.velocity

    def custom_polygon(self, points, scale, rotation, offset):
        output = []
        for i in range(0, len(points), 2):
            output.append(
                Animation.current_position - pygame.Vector2(points[i] + offset[0], points[i+1] + offset[1]).rotate(rotation).rotate(Animation.current_rotation) * self.radius * scale)
        return output

    def draw_galaxy(self, screen: pygame.display):
        self.radius = 60
        main = [-125.7, -20.1, -120.7, -46.1, -107.0, -70.9, -90.7, -92.1, -62.7, -113.1, -32.7, -124.1, -9.7, -128.1, 19.3, -127.1, 53.3, -117.1, 76.3, -103.1, 92.8, -88.7, 104.4, -74.0, 107.9, -67.1, 112.3, -76.7, 119.3, -93.1, 120.3, -116.1, 113.3, -133.1, 103.3, -145.1, 86.3, -155.1, 61.3, -160.1, 8.3, -159.1, -36.7, -149.1, -92.7, -128.1, -138.7, -102.1, -178.7, -76.1, -217.7, -43.1, -256.7, -7.1, -288.7, 31.9, -314.7, 68.9, -333.7, 105.9, -345.7, 139.9, -352.7, 176.9, -352.7, 207.9, -347.7, 233.9, -339.7, 256.9, -325.7, 282.9, -310.7, 303.9, -292.7, 318.9, -271.7, 333.9, -241.7, 351.9, -209.7, 364.9, -161.7, 374.9, -117.7, 377.9, -89.7, 376.9, -47.7, 372.9, -6.7, 364.9, 43.3, 352.9, 80.3, 340.9, 109.3, 329.9, 155.3, 310.9, 191.3, 292.9, 232.3, 272.9, 274.3, 248.9, 337.3, 206.9, 385.3, 168.9, 409.3, 147.9, 434.9, 123.3, 459.3, 98.9, 511.3, 37.9, 481.3, 75.9, 461.3, 99.9, 418.3, 144.9, 385.3, 175.9, 344.3, 208.9, 291.3, 245.9, 239.3, 278.9, 193.3, 303.9, 162.3, 320.9, 119.3, 339.9, 72.3, 358.9, 36.3, 370.9, -10.7, 383.9, -63.7, 394.9, -83.2, 397.2, -106.7, 399.9, -140.7, 400.9, -163.7, 400.9, -189.7, 399.9, -226.7, 392.9, -257.7, 382.9, -287.7, 369.9, -312.7, 356.9, -342.5, 337.2, -367.7, 310.9, -386.7, 279.9, -397.7, 252.9, -403.7, 224.9, -405.7, 189.9, -399.7, 149.9, -389.7, 116.9, -377.7, 89.9, -357.7, 53.9, -337.7, 22.9, -309.7, -13.1, -284.7, -40.1, -255.7, -69.1, -230.3, -91.4, -204.7, -111.1, -167.7, -138.1, -131.4, -159.8, -91.7, -180.1, -45.7, -199.1, 10.0, -215.5, 53.3, -222.1, 85.3, -224.1, 131.3, -221.1, 169.0, -206.7, 181.4, -196.8, 191.3, -187.1, 202.3, -170.1, 208.7, -147.3, 208.7, -129.7, 206.2, -108.9, 200.3, -88.1, 188.7, -65.5, 178.9, -48.4, 163.3, -27.0, 141.3, -2.1, 126.3, 10.9, 123.3, 26.9, 118.3, 44.9, 108.3, 64.9, 93.3, 83.9, 80.3, 96.9, 61.4, 109.2, 43.5, 117.5, 24.0, 122.2, 4.0, 124.2, -15.6, 123.7, -41.7, 118.9, -56.9,
                111.5, -66.8, 106.4, -79.3, 97.7, -88.0, 90.4, -99.3, 78.5, -105.0, 69.7, -110.7, 59.9, -113.7, 65.9, -118.7, 78.9, -122.7, 89.9, -122.7, 106.9, -120.7, 120.9, -113.7, 132.9, -102.7, 142.9, -84.7, 150.9, -73.7, 153.9, -53.7, 155.9, -25.7, 155.9, -4.7, 153.9, 18.3, 149.9, 55.3, 137.9, 94.3, 120.9, 130.3, 100.9, 170.3, 74.9, 202.3, 48.9, 233.3, 20.9, 257.3, -2.1, 276.3, -26.1, 296.3, -53.1, 312.3, -76.1, 330.3, -111.1, 338.3, -134.1, 344.3, -155.1, 348.3, -175.1, 349.3, -195.1, 348.3, -212.1, 347.3, -227.1, 344.3, -242.1, 339.3, -258.1, 329.3, -277.1, 319.3, -294.1, 303.3, -313.1, 288.3, -330.1, 270.3, -343.1, 254.3, -351.1, 239.3, -357.1, 211.3, -368.1, 179.3, -377.1, 140.3, -381.1, 89.3, -382.1, 49.3, -378.1, 0.3, -369.1, -59.7, -354.1, -117.7, -333.1, -174.7, -308.1, -218.7, -286.1, -253.7, -267.1, -283.7, -249.1, -305.7, -235.1, -350.7, -204.1, -388.7, -174.1, -415.5, -150.5, -432.7, -135.1, -459.7, -107.1, -473.7, -92.1, -488.7, -74.1, -511.7, -45.1, -489.0, -76.8, -476.9, -91.4, -464.7, -105.1, -435.4, -135.7, -409.7, -161.1, -373.7, -192.1, -337.7, -220.1, -310.7, -240.1, -280.7, -260.1, -245.7, -282.1, -215.7, -299.1, -158.7, -328.1, -94.7, -356.1, -39.7, -375.1, 13.3, -390.1, 62.3, -400.1, 106.3, -405.1, 160.3, -406.1, 198.3, -403.1, 227.3, -397.1, 254.3, -389.1, 267.6, -384.8, 289.3, -376.1, 309.3, -364.1, 321.3, -356.1, 345.3, -337.1, 365.3, -314.1, 378.3, -295.1, 388.3, -275.1, 394.3, -256.1, 398.3, -241.1, 400.3, -223.1, 401.3, -197.1, 398.3, -171.1, 393.3, -146.1, 384.3, -118.1, 370.3, -86.1, 355.3, -60.1, 336.3, -31.1, 312.3, -0.1, 281.3, 34.9, 246.3, 68.9, 203.3, 104.9, 143.3, 145.9, 102.3, 167.9, 51.3, 190.9, 9.3, 204.9, -33.7, 214.9, -65.7, 217.9, -95.7, 218.9, -121.7, 216.9, -137.7, 213.9, -162.7, 205.9, -179.7, 195.9, -196.7, 179.9, -208.7, 158.9, -211.7, 140.9, -210.7, 107.9, -204.7, 86.9, -194.7, 63.9, -172.7, 30.9, -148.7, 1.9]
        wing1 = [-268.7, 233.9, -275.5, 222.1, -281.7, 205.9, -285.7, 185.9, -285.7, 160.9, -284.7, 145.9, -282.7, 161.9, -276.7, 182.9, -266.7, 202.9, -250.7, 220.9, -234.7, 234.7, -213.7, 246.9, -182.7, 256.9, -159.7, 261.9, -127.7, 264.9, -86.7, 263.9, -37.7, 257.9, 15.3, 245.9, 57.3, 231.9, 88.3, 218.9, 128.3, 200.9, 167.3, 181.9, 205.3, 160.9, 246.3, 134.9, 288.3, 104.9, 313.3, 84.9, 345.3, 57.9, 371.3, 32.9, 401.3, 0.9, 419.3, -20.1, 442.3, -52.1, 457.3, -74.1, 475.3, -105.1, 491.3, -139.1, 503.3, -172.1, 508.3, -192.1, 515.3, -223.1, 518.3, -253.1, 519.3, -290.1, 516.3, -322.1, 506.3, -354.1, 498.3, -
                 375.1, 489.3, -391.1, 477.3, -408.1, 458.3, -429.1, 441.3, -443.1, 401.3, -469.1, 431.3, -459.1, 470.3, -441.1, 492.3, -425.1, 513.3, -407.1, 530.3, -385.1, 543.3, -362.1, 553.3, -336.1, 561.3, -304.1, 563.3, -271.1, 561.3, -235.1, 556.3, -201.1, 550.3, -173.1, 536.3, -134.1, 523.3, -104.1, 505.3, -70.1, 489.3, -45.1, 463.3, -10.1, 440.3, 17.9, 416.3, 43.9, 387.3, 71.9, 356.3, 98.9, 327.3, 121.9, 284.3, 153.9, 243.3, 179.9, 196.3, 206.9, 156.3, 226.9, 112.3, 246.9, 77.3, 260.9, 39.3, 273.9, -8.7, 285.9, -59.7, 294.9, -96.7, 296.9, -133.7, 295.9, -166.7, 291.9, -200.7, 283.9, -235.7, 265.9, -253.7, 251.9]
        wing2 = [37.3, -304.1, 70.3, -307.1, 103.3, -307.1, 133.3, -307.1, 161.3, -302.1, 200.3, -292.1, 223.3, -279.1, 242.3, -265.1, 256.3, -250.1, 266.3, -234.1, 273.3, -218.1, 278.3, -195.1, 277.3, -167.1, 276.3, -155.1, 271.3, -182.1, 264.3, -203.1, 255.3, -217.1, 242.3, -232.1, 222.3, -247.1, 199.3, -260.1, 161.3, -271.1, 132.3, -275.1, 81.3, -275.1, 36.3, -269.1, -19.7, -256.1, -79.7, -237.1, -117.7, -219.1, -158.7, -200.1, -199.7, -179.1, -235.7, -156.1, -278.7, -127.1, -308.7, -104.1, -342.7, -76.1, -362.7, -57.1, -390.7, -29.1, -414.7, -4.1, -436.7, 23.9, -458.7, 53.9, -481.7, 91.9, -498.7, 129.9, -510.7,
                 160.9, -520.7, 197.9, -526.2, 221.6, -528.5, 240.9, -529.1, 259.6, -529.1, 279.3, -524.7, 323.9, -513.7, 358.9, -496.7, 391.9, -482.7, 407.9, -462.7, 428.9, -441.7, 445.9, -409.7, 465.9, -430.7, 458.9, -454.7, 449.9, -485.7, 433.9, -516.7, 409.9, -534.7, 388.9, -553.7, 355.9, -566.7, 320.9, -573.7, 280.9, -572.7, 238.9, -569.7, 209.9, -561.7, 173.9, -548.7, 132.9, -534.7, 98.9, -510.7, 56.9, -487.7, 21.9, -465.7, -8.1, -441.7, -35.1, -417.7, -59.1, -400.7, -77.1, -371.7, -103.1, -324.7, -140.1, -287.7, -166.1, -248.7, -192.1, -208.7, -214.1, -168.7, -235.1, -120.7, -256.1, -61.7, -280.1, -8.7, -294.1]
        detail = [2.0, -3.1, 7.0, -1.1, 12.0, -0.1, 19.0, 0.9, 29.0, 0.9, 42.0, -0.1, 65.0, -3.1, 85.0, -6.1, 127.0, -
                  17.1, 105.0, -10.1, 87.0, -4.1, 61.0, 1.9, 37.0, 4.9, 23.0, 5.9, 10.0, 4.9, 6.0, 3.9, 2.0, 2.9, -1.0, 1.9]

        # inside
        pygame.draw.polygon(screen, (0, 0, 0),
                            self.custom_polygon(main, 0.005, 0, (0, 0)))
        pygame.draw.polygon(screen, (0, 0, 0),
                            self.custom_polygon(wing1, 0.005, 0, (0, 0)))
        pygame.draw.polygon(screen, (0, 0, 0),
                            self.custom_polygon(wing2, 0.005, 0, (0, 0)))
        # outline
        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(main, 0.005, 0, (0, 0)), 2)
        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(wing1, 0.005, 0, (0, 0)), 2)
        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(wing2, 0.005, 0, (0, 0)), 2)

        soften_value = 10
        softer_color = (self.color[0]-soften_value,
                        self.color[1]-soften_value,
                        self.color[2]-soften_value)

        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.0015, 180, (-270, -300)))
        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.003, 180, (-210, -30)))
        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.0055, 180, (-103, 34)))
        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.0025, 180, (-130, 220)))

    def draw_saturn(self, screen: pygame.display):
        self.radius = 100
        ring = [-324.0, 69.9, -310.0, 56.9, -290.0, 43.9, -256.9, 26.5, -221.6, 9.9, -190.6, -2.6, -161.2, -13.5, 130.4, -93.5, 144.4, -95.9, 189.8, -103.4, 236.0, -108.1, 274.1, -109.6, 293.4, -108.8, 316.0, -105.1, 325.7, -99.8, 332.0, -95.1, 333.0, -86.1,
                327.6, -74.8, 312.0, -60.6, 296.5, -49.2, 277.0, -37.1, 217.9, -10.7, 176.0, 5.9, 127.0, 22.9, 18.3, 56.2, -12.0, 64.9, -50.0, 74.2, -114.7, 87.4, -175.1, 99.9, -235.0, 106.9, -291.1, 107.8, -316.0, 103.9, -327.1, 97.6, -333.0, 87.9, -331.0, 79.9]
        cover = [-157.0, -38.1, 123.0, -104.1, 129.0, -96.1, 136.0, -86.1, 143.0, -75.1, 149.0, -
                 63.1, 153.0, -51.1, -157.0, 29.9, -160.0, 17.9, -160.0, -2.1, -160.0, -16.1, -159.0, -28.1]
        detail = [2.0, -3.1, 7.0, -1.1, 12.0, -0.1, 19.0, 0.9, 29.0, 0.9, 42.0, -0.1, 65.0, -3.1, 85.0, -6.1, 127.0, -
                  17.1, 105.0, -10.1, 87.0, -4.1, 61.0, 1.9, 37.0, 4.9, 23.0, 5.9, 10.0, 4.9, 6.0, 3.9, 2.0, 2.9, -1.0, 1.9]
        # inside
        pygame.draw.circle(screen, (0, 0, 0),
                           Animation.current_position, self.radius)
        # outline
        pygame.draw.circle(screen, self.color,
                           Animation.current_position, self.radius, 2)
        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(ring, 0.007, 0, (0, 0)), 2)
        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(ring, 0.0066, 0, (0, 0)), 2)
        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(ring, 0.0063, 0, (0, 0)), 2)

        pygame.draw.polygon(screen, self.color,
                            self.custom_polygon(ring, 0.0059, 0, (0, 0)), 2)
        # cover rings
        pygame.draw.polygon(screen, (0, 0, 0),
                            self.custom_polygon(cover, 0.00605, 180, (0, 0)))

        soften_value = 10
        softer_color = (self.color[0]-soften_value,
                        self.color[1]-soften_value,
                        self.color[2]-soften_value)

        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.002, 180, (-340, -350)))
        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.005, 180, (-196, -20)))
        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.0095, 180, (-103, 14)))
        pygame.draw.polygon(screen, softer_color,
                            self.custom_polygon(detail, 0.0035, 180, (-170, 220)))

    def draw(self, screen: pygame.display):
        # pygame.draw.circle(screen, self.color, Animation.current_position, self.radius, 2)
        if Animation.current_type == 0:
            self.draw_saturn(screen)
        elif Animation.current_type == 1:
            self.draw_galaxy(screen)

    def update(self, dt: float):
        self.cooldown -= dt
        array = [3, 6]
        random.shuffle(array)
        if self.cooldown < 0:
            self.cooldown = 0.07
            p = RectParticle((SCREEN_WIDTH*1.5)*random.random(),
                             SCREEN_HEIGHT+10, array[0], array[1], (50, 50, 50))
            p.velocity = self.velocity

        Animation.current_position += (self.velocity * dt * PLANET_SPEED)
        self.position = Animation.current_position
        if self.loop_around(150):
            Animation.current_rotation = random.randint(0, 18) * 10
            Animation.current_type = random.randint(0, 1)
